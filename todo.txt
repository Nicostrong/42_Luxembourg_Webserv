-Implement CGI
    -> Implement CGI parser that read header and reconstruct a http response according to cgi headers.
-Handle redirection for POST/DELETE 
    -> In the config file ask for the redirection code
-Add timeouts to prevent having persistents sockte that can be closed
-Modify buffer object to be rotative to optimize space available in buffer and
    prevent aligning each time to be sure to have enough space for data.
-Make socket NON BLOCKING
[X]-Implements all status code for CGI handling
[X]-Allocate each socket and fd object related in heap insetad of stack to prevent
    problem with copy in STL containers
[X]-Handle connection state / close teh conenction when request malformed to 
    prevent integrity of the data
-Handle range on downloaded files to get a part of file.
[X]-Refacto the way data is sent to allow all others things than just sending 
    static files.
-Handle caching through ETAG to make client cache static files.
    -> Should look like ETag: "xxxxxxxx-yyyyyyyy" where x is the last 
       modification timestamp in hexa and y teh file content len in hexa.
[X]-Rework base Architecture to listen on each port and redirect request on the 
    corrrect structure and have all sockets in one list and have servers where 
    the request will be redirected depending on mandatory HOST header
-Handle upload with diffrents content types not only plain/text

// Mapping of all unique ip:port for binding
    -> Priorize specific ip adress bedore wildcard ones