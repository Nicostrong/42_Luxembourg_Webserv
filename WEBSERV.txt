WEBSERVER

Un serveur web écoute sur un port spécifique (généralement le port 80 pour HTTP),
accepte les connexions des clients, traite les requêtes (par exemple, GET, POST)
et renvoie les réponses correspondantes (comme une page HTML).
La logique principale consiste à gérer les connexions et les données en suivant le protocole HTTP.

Logique a implementer:
le serveur doit ecouter les connections sur un port
il doit traiter les requete des clients
il execute le requete
il ecoute le port

Parsing d une requete HTTP:

1) ligne de requete:

	GET /index.html HTTP/1.1

	=> METHODE:
		=> GET
	=> URL:
		=> adresse demande
	=> version HTTP:
		=> 1.1 (ici)
2) en-tete:

	Host: localhost
	User-Agent: Mozilla/5.0

3) corps:

	contient les donnees envoyer via POST


LES METHODES:
	1) GET:
		Demande les donnes a un serveur.
		GET /index.html HTTP/1.1	=>	on demande la page index.html
		Elle modifie rien sur le serveur

	2) POST:
		utilise pour envoyer des donnes au serveur pour modifier des ressources.
		POST /submit HTTP/1.1		=>	on soumet un formulaire les donnees sont dans le corps de la requete
		Elle modifie les donnes sur le serveur
	
	3) PUT:
		utilise pour mettre a jour on ajouter des donnes sur le server
		PUT /img.png HTTP/1.1		=>	on envoie une image sur le serveur
		les donnees sont envoye dans le corps de la requete

	4) DELETE:
		utilise pour supprimer des resources sur le server
		DELETE /file.txt HTTP/1.1	=>	on veut supprimer le fichier file.txt sur le serveur
	
	5) PATCH:
		utilise pour mettre a jour partiellement les donnes sur le server
		PATCH /user/123 HTTP/1.1	=>	on update le user 123
		on modifie seulement une donnee/ un champs
	
	6) OPTIONS:
		utiliser pour interoger le server sur les methode autorise
		OPTIONS /resource HTTP/1.1	=>	on verifie les autorisations pour resource
		ne modifie pas les ressources
	
	7) HEAD:
		comme GET mais renvoie que les entete pas le corps de la reponse
		HEAD /index.html HTML/1.1	=>	on recoit que l entete et pas le coprs de la page
		
